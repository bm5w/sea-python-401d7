.. slideconf::
    :autoslides: False

***********************
Code Fellows 401 Python
***********************

.. slide:: Code Fellows 401 Python
    :level: 1

    This document contains no slides.

The materials in this documentation support the Python Dev Accelerator program
at Code Fellows in Seattle, WA.

.. _course-overview:

Overview
========

.. sidebar:: This Week
    :subtitle: quick links to daily schedules

    **Week 01**

    .. include:: schedule/week01/index.rst
        :start-line: 12



A quick read on the objectives, philosophy and values held by Code Fellows and
followed by this Course.

Course Objectives
-----------------

- Acquire strong and idiomatic skills as a Python programmer
- Achieve a deep understanding of the full environment in which web programming
  occurs, from sockets up to frameworks.
- Develop the evaluative criteria to choose the right tool for the job.
- Build facility with associated technologies: git, HTML, CSS, Javascript.
- Gain mastery of the fundamental skills of agile development, testing,
  deployment and teamwork.


Learning Philosophy
-------------------

I would like you to approach this course as if it were a graduate seminar.

In a university, undergraduates are taught in lectures.
An "expert" delivers lesson material and "students" absorb it (or don't).

A graduate seminar is a very different kind of learning environment.
The professor chooses a topic, provides initial learning resources and facilitates discussion.
Students are expected to be active participants, asking and answering questions based on their learning and their own experience.

In this course, your instructor has the benfit of work experience, and his or her own set of knowledge.
You have your own specific skills and experiences.
Please bring them to class and apply what you already know to what you are learning.
This will enhance the experience both for you and for the other students around you.


Learning Python
---------------

Learning to program in Python is about more than just learning logic, algorithms and data structures.
It's about learning to write idiomatic Python.
Python lends itself to clear, expressive programs.
Learning to write the most pythonic Python will result in programs that are clean and easy to understand.
But more than that, idiomatic Python is Python that operates to the strengths of the language.
Pythonic code will be faster and more efficient than code that is not Pythonic.
Throughout the course, an emphasis will be placed on writing truly pythonic Python, and on learning to evaluate what is pythonic.


The Honor Code:
---------------

Like the Python community at large, Code Fellows has a `code of conduct <https://github.com/codefellows/code-of-conduct>`_.
All students in this course are expected to know, and abide by, this code.
Please make sure you read `the code <https://github.com/codefellows/code-of-conduct>`_ and are comfortable with what it means.
If you have any questions, please address them to one of your instructors or the campus manager.
Issues should be reported to conduct@codefellows.com


Multi-programmer Workflow
-------------------------

.. toctree::
    :maxdepth: 2

    /lectures/ping_pong_programming


Grading Guidelines
------------------

.. toctree::
    :maxdepth: 2

    /lectures/grading_rubric


Presentation Guidelines
-----------------------

.. toctree::
    :maxdepth: 2

    /lectures/presentation_guidelines

Community Involvement
---------------------

.. toctree::
    :maxdepth: 2

    /assignments/community

Sample Read Me
---------------------

.. toctree::
    :maxdepth: 2

    /readings/sample_readme

After Graduation
----------------

.. toctree::
    :maxdepth: 2

    /readings/python_developer_roadmap


Pre-Work
========

.. include:: schedule/prework.rst
    :start-line: 7

Course Schedule
===============

This schedule is subject to change.  Please check back frequently.

Week 01
-------

.. include:: schedule/week01/index.rst
    :start-line: 12

.. Week 02
.. -------

.. .. include:: schedule/week02/index.rst
..     :start-line: 12

.. Week 03
.. -------

.. .. include:: schedule/week03/index.rst
..     :start-line: 12

.. Week 04
.. -------

.. .. include:: schedule/week04/index.rst
..     :start-line: 12

.. Week 05
.. -------

.. .. include:: schedule/week05/index.rst
..     :start-line: 12

.. Week 06
.. -------

.. .. include:: schedule/week06/index.rst
..     :start-line: 12

.. Week 07
.. -------

.. .. include:: schedule/week07/index.rst
..     :start-line: 12

.. Week 08
.. -------

.. .. include:: schedule/week08/index.rst
..     :start-line: 12

.. Week 09
.. -------

.. .. include:: schedule/week09/index.rst
..     :start-line: 12

.. Week 10
.. -------

.. .. include:: schedule/week10/index.rst
..     :start-line: 12
